name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'feature/**'
  workflow_dispatch:
    inputs:
      enable_terminal:
        type: boolean
        description: 'Enable terminal session.'
        required: false
        default: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: docker compose up -d --build

      - name: Copy codebase into container
        run: |
          container_id="$(docker compose ps -q phpserver)"
          docker cp -L . "${container_id}":/app/

      - name: Install Composer dependencies
        run: docker compose exec phpserver composer install --ansi --no-suggest

      - name: Lint code
        run: docker compose exec phpserver composer lint
        continue-on-error: ${{ vars.CI_LINT_IGNORE_FAILURE == '1' }}

      - name: Restart server with Xdebug enabled
        run: XDEBUG_ENABLE=true docker compose up -d phpserver

      - name: Run tests with PHPUnit
        run: docker compose exec -T -e XDEBUG_MODE=coverage phpserver vendor/bin/phpunit
        continue-on-error: ${{ vars.CI_TEST_IGNORE_FAILURE == '1' }}

      - name: Run tests with Behat
        run: docker compose exec -T -e XDEBUG_MODE=coverage phpserver vendor/bin/behat
        continue-on-error: ${{ vars.CI_TEST_IGNORE_FAILURE == '1' }}

      - name: Process test logs and artifacts
        run: |
          mkdir -p /tmp/logs
          if docker compose ps --services --filter "status=running" | grep -q phpserver && docker compose exec phpserver test -d /app/.logs; then
            docker compose cp phpserver:/app/.logs/. "/tmp/logs/"
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: /tmp/logs

      - name: Upload logs as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: /tmp/logs
          include-hidden-files: true
          if-no-files-found: error

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ env.CODECOV_TOKEN != '' }}
        with:
          files: |
            /tmp/logs/coverage/behat/cobertura.xml
            /tmp/logs/coverage/phpunit/cobertura.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Setup tmate session
        if: ${{ !cancelled() && github.event.inputs.enable_terminal }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 5
